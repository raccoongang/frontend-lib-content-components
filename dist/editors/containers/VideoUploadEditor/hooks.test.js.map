{"version":3,"file":"hooks.test.js","names":["hooks","_interopRequireWildcard","require","_testUtils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","state","MockUseState","setLoading","jest","fn","setErrorMessage","uploadVideo","describe","beforeEach","clearAllMocks","testGetter","keys","loading","errorMessage","textInputValue","mock","afterEach","restore","uploadEditor","uploader","it","expect","stateVals","toEqual","file","File","type","validator","fileValidator","toHaveBeenCalled","not"],"sources":["../../../../src/editors/containers/VideoUploadEditor/hooks.test.js"],"sourcesContent":["import * as hooks from './hooks';\nimport { MockUseState } from '../../../testUtils';\n\nconst state = new MockUseState(hooks);\nconst setLoading = jest.fn();\nconst setErrorMessage = jest.fn();\nconst uploadVideo = jest.fn();\n\ndescribe('Video Upload Editor hooks', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n  describe('state hooks', () => {\n    state.testGetter(state.keys.loading);\n    state.testGetter(state.keys.errorMessage);\n    state.testGetter(state.keys.textInputValue);\n  });\n  describe('using state', () => {\n    beforeEach(() => { state.mock(); });\n    afterEach(() => { state.restore(); });\n\n    describe('Hooks for Video Upload', () => {\n      beforeEach(() => {\n        hooks.uploadEditor();\n        hooks.uploader();\n      });\n      it('initialize state with correct values', () => {\n        expect(state.stateVals.loading).toEqual(false);\n        expect(state.stateVals.errorMessage).toEqual(null);\n        expect(state.stateVals.textInputValue).toEqual('');\n      });\n    });\n  });\n  describe('File Validation', () => {\n    it('Checks with valid MIME type', () => {\n      const file = new File(['(⌐□_□)'], 'video.mp4', { type: 'video/mp4' });\n      const validator = hooks.fileValidator(setLoading, setErrorMessage, uploadVideo);\n      validator(file);\n      expect(uploadVideo).toHaveBeenCalled();\n      expect(setErrorMessage).not.toHaveBeenCalled();\n    });\n    it('Checks with invalid MIME type', () => {\n      const file = new File(['(⌐□_□)'], 'video.gif', { type: 'video/mp4' });\n      const validator = hooks.fileValidator(setLoading, setErrorMessage, uploadVideo);\n      validator(file);\n      expect(uploadVideo).not.toHaveBeenCalled();\n      expect(setErrorMessage).toHaveBeenCalled();\n    });\n  });\n});\n"],"mappings":"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"}
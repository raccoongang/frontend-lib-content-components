{"version":3,"file":"video.test.js","names":["_","require","_keyStore","_interopRequireDefault","thunkActions","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","jest","mock","actions","video","load","args","updateField","selectors","app","courseDetails","state","videos","videoId","videoSettings","getTranscriptDownloadUrl","uploadAsset","allowThumbnailUpload","uploadThumbnail","deleteTranscript","uploadTranscript","getTranscriptFile","updateTranscriptLanguage","checkTranscriptsForImport","importTranscript","fetchVideoFeatures","uploadVideo","requireActual","removeItemOnce","parseYoutubeId","thunkActionsKeys","keyStore","mockLanguage","mockFile","mockFilename","mockThumbnail","mockThumbnailResponse","data","image_url","thumbnailUrl","mockAllowTranscriptImport","command","mockVideoFeatures","videoSharingEnabled","mockSelectedVideoId","mockSelectedVideoUrl","testMetadata","download_track","download_video","edx_video_id","end_time","handout","html5_sources","license","show_captions","start_time","transcripts","thumbnail","videoSharingData","video_sharing_doc_url","video_sharing_options","testState","originalThumbnail","testVideosState","duration","transcript_urls","es","testUpload","testReplaceUpload","file","language","filename","describe","dispatch","getState","dispatchedAction","beforeEach","fn","action","blockId","blockValue","metadata","studioEndpointUrl","studioView","html","dispatchedLoad","dispatchedAction1","dispatchedAction2","spyOn","determineVideoSources","mockReturnValue","videoUrl","fallbackVideos","parseVideoSharingSetting","level","parseLicense","by","nc","nd","sa","parseTranscripts","afterEach","restoreAllMocks","it","loadVideoData","calls","expect","not","toEqual","videoSource","allowVideoDownloads","allowVideoSharing","videoSharingLearnMoreLink","videoSharingEnableForCourse","video_sharing_enabled","allowTranscriptDownloads","showTranscriptByDefault","startTime","stopTime","total","licenseType","licenseDetails","attribution","noncommercial","noDerivatives","shareAlike","courseLicenseType","courseLicenseDetails","selectedVideoTranscriptUrls","videoSharingEnabledForCourse","mockClear","onSuccess","toHaveBeenCalledWith","videoSharingEnabledForAll","allowTranscriptImport","edxVideoId","youtubeId","youtubeUrl","html5Sources","testStudioViewDataWithTranscripts","testStudioViewData","testBadStudioViewData","transcriptsData","emptyLicenseData","noLicense","licenseData","videoSharingSetting","courseSetting","blockSetting","uploadHandout","toBe","test","asset","url","emptyCanvas","newLanguageCode","languageBeforeChange","toHaveBeenCalled","spies","mockName","replaceTranscript","newFile","newFilename","setLoadSpinner","postUploadRedirect","supportedFiles","File","type","resetAllMocks","files","file_name","content_type","mockResponseData","success","mockFetchResponse","Promise","resolve","global","fetch","mockImplementation","response","upload_url","mockRequestResponse","toHaveBeenCalledTimes","_ref","index","uploadUrl","body","spyConsoleError","console"],"sources":["../../../../../src/editors/data/redux/thunkActions/video.test.js"],"sourcesContent":["import { actions } from '..';\nimport keyStore from '../../../utils/keyStore';\nimport * as thunkActions from './video';\n\njest.mock('..', () => ({\n  actions: {\n    video: {\n      load: (args) => ({ load: args }),\n      updateField: (args) => ({ updateField: args }),\n    },\n  },\n  selectors: {\n    app: {\n      courseDetails: (state) => ({ courseDetails: state }),\n      videos: (state) => ({ videos: state.app.videos }),\n    },\n    video: {\n      videoId: (state) => ({ videoId: state }),\n      videoSettings: (state) => ({ videoSettings: state }),\n      getTranscriptDownloadUrl: (state) => ({ getTranscriptDownloadUrl: state }),\n    },\n  },\n}));\njest.mock('./requests', () => ({\n  uploadAsset: (args) => ({ uploadAsset: args }),\n  allowThumbnailUpload: (args) => ({ allowThumbnailUpload: args }),\n  uploadThumbnail: (args) => ({ uploadThumbnail: args }),\n  deleteTranscript: (args) => ({ deleteTranscript: args }),\n  uploadTranscript: (args) => ({ uploadTranscript: args }),\n  getTranscriptFile: (args) => ({ getTranscriptFile: args }),\n  updateTranscriptLanguage: (args) => ({ updateTranscriptLanguage: args }),\n  checkTranscriptsForImport: (args) => ({ checkTranscriptsForImport: args }),\n  importTranscript: (args) => ({ importTranscript: args }),\n  fetchVideoFeatures: (args) => ({ fetchVideoFeatures: args }),\n  uploadVideo: (args) => ({ uploadVideo: args }),\n}));\n\njest.mock('../../../utils', () => ({\n  ...jest.requireActual('../../../utils'),\n  removeItemOnce: (args) => (args),\n}));\n\njest.mock('../../services/cms/api', () => ({\n  parseYoutubeId: (args) => (args),\n}));\n\nconst thunkActionsKeys = keyStore(thunkActions);\n\nconst mockLanguage = 'en';\nconst mockFile = 'soMEtRANscRipT';\nconst mockFilename = 'soMEtRANscRipT.srt';\nconst mockThumbnail = 'sOMefILE';\nconst mockThumbnailResponse = { data: { image_url: 'soMEimAGEUrL' } };\nconst thumbnailUrl = 'soMEimAGEUrL';\nconst mockAllowTranscriptImport = { data: { command: 'import' } };\nconst mockVideoFeatures = {\n  data: {\n    allowThumbnailUpload: 'soMEbOolEAn',\n    videoSharingEnabled: 'soMEbOolEAn',\n  },\n};\nconst mockSelectedVideoId = 'ThisIsAVideoId';\nconst mockSelectedVideoUrl = 'ThisIsAYoutubeUrl';\n\nconst testMetadata = {\n  download_track: 'dOWNlOAdTraCK',\n  download_video: 'downLoaDViDEo',\n  edx_video_id: 'soMEvIDEo',\n  end_time: 0,\n  handout: 'hANdoUT',\n  html5_sources: [],\n  license: 'liCENse',\n  show_captions: 'shOWcapTIONS',\n  start_time: 0,\n  transcripts: ['do', 're', 'mi'],\n  thumbnail: 'thuMBNaIl',\n};\nconst videoSharingData = {\n  video_sharing_doc_url: 'SomEUrL.Com',\n  video_sharing_options: 'OpTIOns',\n};\nconst testState = {\n  transcripts: ['la'],\n  thumbnail: 'sOMefILE',\n  originalThumbnail: null,\n  videoId: 'soMEvIDEo',\n};\nconst testVideosState = {\n  edx_video_id: mockSelectedVideoId,\n  thumbnail: 'thumbnail',\n  duration: 60,\n  transcripts: ['es'],\n  transcript_urls: { es: 'url' },\n};\nconst testUpload = { transcripts: ['la', 'en'] };\nconst testReplaceUpload = {\n  file: mockFile,\n  language: mockLanguage,\n  filename: mockFilename,\n};\n\ndescribe('video thunkActions', () => {\n  let dispatch;\n  let getState;\n  let dispatchedAction;\n  beforeEach(() => {\n    dispatch = jest.fn((action) => ({ dispatch: action }));\n    getState = jest.fn(() => ({\n      app: {\n        blockId: 'soMEBloCk',\n        blockValue: { data: { metadata: { ...testMetadata }, ...videoSharingData } },\n        studioEndpointUrl: 'soMEeNDPoiNT',\n        courseDetails: { data: { license: null } },\n        studioView: { data: { html: 'sOMeHTml' } },\n      },\n      video: testState,\n    }));\n  });\n  describe('loadVideoData', () => {\n    let dispatchedLoad;\n    let dispatchedAction1;\n    let dispatchedAction2;\n    beforeEach(() => {\n      jest.spyOn(thunkActions, thunkActionsKeys.determineVideoSources).mockReturnValue({\n        videoUrl: 'videOsOurce',\n        videoId: 'videOiD',\n        fallbackVideos: 'fALLbACKvIDeos',\n      });\n      jest.spyOn(thunkActions, thunkActionsKeys.parseVideoSharingSetting).mockReturnValue({\n        level: 'course',\n        value: true,\n      });\n      jest.spyOn(thunkActions, thunkActionsKeys.parseLicense).mockReturnValue([\n        'liCENSEtyPe',\n        {\n          by: true,\n          nc: true,\n          nd: true,\n          sa: false,\n        },\n      ]);\n      jest.spyOn(thunkActions, thunkActionsKeys.parseTranscripts).mockReturnValue(\n        testMetadata.transcripts,\n      );\n    });\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n    it('dispatches fetchVideoFeatures action', () => {\n      thunkActions.loadVideoData()(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n      expect(dispatchedLoad).not.toEqual(undefined);\n      expect(dispatchedAction1.fetchVideoFeatures).not.toEqual(undefined);\n    });\n    it('dispatches checkTranscriptsForImport action', () => {\n      thunkActions.loadVideoData()(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n      expect(dispatchedLoad).not.toEqual(undefined);\n      expect(dispatchedAction2.checkTranscriptsForImport).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.load', () => {\n      thunkActions.loadVideoData()(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n      expect(dispatchedLoad.load).toEqual({\n        videoSource: 'videOsOurce',\n        videoId: 'videOiD',\n        fallbackVideos: 'fALLbACKvIDeos',\n        allowVideoDownloads: testMetadata.download_video,\n        allowVideoSharing: {\n          level: 'course',\n          value: true,\n        },\n        videoSharingLearnMoreLink: videoSharingData.video_sharing_doc_url,\n        videoSharingEnableForCourse: videoSharingData.video_sharing_enabled,\n        transcripts: testMetadata.transcripts,\n        allowTranscriptDownloads: testMetadata.download_track,\n        showTranscriptByDefault: testMetadata.show_captions,\n        duration: {\n          startTime: testMetadata.start_time,\n          stopTime: testMetadata.end_time,\n          total: 0,\n        },\n        handout: testMetadata.handout,\n        licenseType: 'liCENSEtyPe',\n        licenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        courseLicenseType: 'liCENSEtyPe',\n        courseLicenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        thumbnail: testMetadata.thumbnail,\n      });\n    });\n    it('dispatches actions.video.load with selectedVideoId', () => {\n      getState = jest.fn(() => ({\n        app: {\n          blockId: 'soMEBloCk',\n          studioEndpointUrl: 'soMEeNDPoiNT',\n          blockValue: { data: { metadata: {} } },\n          courseDetails: { data: { license: null } },\n          studioView: { data: { html: 'sOMeHTml' } },\n          videos: testVideosState,\n        },\n      }));\n      thunkActions.loadVideoData(mockSelectedVideoId, null)(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n      expect(dispatchedLoad.load).toEqual({\n        videoSource: 'videOsOurce',\n        videoId: 'videOiD',\n        fallbackVideos: 'fALLbACKvIDeos',\n        allowVideoDownloads: undefined,\n        transcripts: testVideosState.transcripts,\n        selectedVideoTranscriptUrls: testVideosState.transcript_urls,\n        allowTranscriptDownloads: undefined,\n        allowVideoSharing: {\n          level: 'course',\n          value: true,\n        },\n        showTranscriptByDefault: undefined,\n        duration: {\n          startTime: testMetadata.start_time,\n          stopTime: 0,\n          total: testVideosState.duration,\n        },\n        handout: undefined,\n        licenseType: 'liCENSEtyPe',\n        licenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        videoSharingEnabledForCourse: undefined,\n        videoSharingLearnMoreLink: undefined,\n        courseLicenseType: 'liCENSEtyPe',\n        courseLicenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        thumbnail: undefined,\n      });\n    });\n    it('dispatches actions.video.load with selectedVideoUrl', () => {\n      thunkActions.loadVideoData(null, mockSelectedVideoUrl)(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n      expect(dispatchedLoad.load).toEqual({\n        videoSource: mockSelectedVideoUrl,\n        videoId: 'videOiD',\n        fallbackVideos: 'fALLbACKvIDeos',\n        allowVideoDownloads: testMetadata.download_video,\n        transcripts: testMetadata.transcripts,\n        allowTranscriptDownloads: testMetadata.download_track,\n        showTranscriptByDefault: testMetadata.show_captions,\n        duration: {\n          startTime: testMetadata.start_time,\n          stopTime: testMetadata.end_time,\n          total: 0,\n        },\n        allowVideoSharing: {\n          level: 'course',\n          value: true,\n        },\n        handout: testMetadata.handout,\n        licenseType: 'liCENSEtyPe',\n        licenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        selectedVideoTranscriptUrls: undefined,\n        videoSharingEnabledForCourse: undefined,\n        videoSharingLearnMoreLink: 'SomEUrL.Com',\n        courseLicenseType: 'liCENSEtyPe',\n        courseLicenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        thumbnail: testMetadata.thumbnail,\n      });\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      thunkActions.loadVideoData()(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n      dispatch.mockClear();\n      dispatchedAction1.fetchVideoFeatures.onSuccess(mockVideoFeatures);\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({\n        allowThumbnailUpload: mockVideoFeatures.data.allowThumbnailUpload,\n        videoSharingEnabledForAll: mockVideoFeatures.data.videoSharingEnabled,\n      }));\n      dispatch.mockClear();\n      dispatchedAction2.checkTranscriptsForImport.onSuccess(mockAllowTranscriptImport);\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({\n        allowTranscriptImport: true,\n      }));\n    });\n  });\n  describe('determineVideoSources', () => {\n    const edxVideoId = 'EDxviDEoiD';\n    const youtubeId = 'yOuTuBEiD';\n    const youtubeUrl = `https://youtu.be/${youtubeId}`;\n    const html5Sources = ['htmLOne', 'hTMlTwo', 'htMLthrEE'];\n    describe('when edx id, youtube id and source values are null', () => {\n      it('returns empty strings for ids and an empty array for sources', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: null,\n          youtubeId: null,\n          html5Sources: null,\n        })).toEqual({\n          videoUrl: '',\n          videoId: '',\n          fallbackVideos: [],\n        });\n      });\n    });\n    describe('when there is an edx video id, youtube id and html5 sources', () => {\n      it('returns all three with the youtube id wrapped in url', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId,\n          youtubeId,\n          html5Sources,\n        })).toEqual({\n          videoUrl: youtubeUrl,\n          videoId: edxVideoId,\n          fallbackVideos: html5Sources,\n        });\n      });\n    });\n    describe('when there is only an edx video id', () => {\n      it('returns the edx video id for video source', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId,\n          youtubeId: '',\n          html5Sources: '',\n        })).toEqual({\n          videoUrl: '',\n          videoId: edxVideoId,\n          fallbackVideos: [],\n        });\n      });\n    });\n    describe('when there is no edx video id', () => {\n      it('returns the youtube url for video source and html5 sources for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId,\n          html5Sources,\n        })).toEqual({\n          videoUrl: youtubeUrl,\n          videoId: '',\n          fallbackVideos: html5Sources,\n        });\n      });\n    });\n    describe('when there is no edx video id and no youtube id', () => {\n      it('returns the first html5 source for video url and the rest for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId: '',\n          html5Sources,\n        })).toEqual({\n          videoUrl: 'htmLOne',\n          videoId: '',\n          fallbackVideos: ['hTMlTwo', 'htMLthrEE'],\n        });\n      });\n      it('returns the html5 source for video source and an array with 2 empty values for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId: '',\n          html5Sources: ['htmlOne'],\n        })).toEqual({\n          videoUrl: 'htmlOne',\n          videoId: '',\n          fallbackVideos: [],\n        });\n      });\n    });\n    describe('when there is no edx video id, no youtube id and no html5 sources', () => {\n      it('returns an empty string for video source and an array with 2 empty values for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId: '',\n          html5Sources: [],\n        })).toEqual({\n          videoUrl: '',\n          videoId: '',\n          fallbackVideos: [],\n        });\n      });\n    });\n  });\n  describe('parseTranscripts', () => {\n    const testStudioViewDataWithTranscripts = 'de descarga debajo del video.&#34;, &#34;value&#34;: &#34;&#34;, &#34;type&#34;: &#34;Generic&#34;, &#34;options&#34;: []}, &#34;transcripts&#34;: {&#34;explicitly_set&#34;: false, &#34;default_value&#34;: {}, &#34;field_name&#34;: &#34;transcripts&#34;, &#34;display_name&#34;: &#34;Idiomas de transcripci\\\\u00f3n&#34;, &#34;help&#34;: &#34;A\\\\u00f1ada transcripciones en diferentes idiomas. Haga clic a continuaci\\\\u00f3n para especificar un idioma y subir un archivo .srt de transcripci\\\\u00f3n para dicho idioma.&#34;, &#34;value&#34;: {&#34;aa&#34;: &#34;non_existent_dummy_file_name&#34;, &#34;ab&#34;: &#34;non_existent_dummy_file_name&#34;, &#34;ba&#34;: &#34;non_existent_dummy_file_name&#34;, &#34;en&#34;: &#34;external video-en.txt&#34;}, &#34;type&#34;: &#34;VideoTranslations&#34;, &#34;options&#34;: [], &#34;custom&#34;: true, &#34;languages&#34;: [{&#34;label&#34;: &#34;Abkhazian&#34;, &#34;code&#34;: &#34;ab&#34;}], &#34;urlRoot&#34;: &#34;/xblock/block-v1:GalileoX+XS_Mate001+3T2022+type@video+block@20bc09f5522d430f8e43c2bc377b348c/handler/studio_transcript/translation&#34;}, &#34;youtube_id_0_75&#34;: {';\n    const testStudioViewData = 'de descarga debajo del video.&#34;, &#34;value&#34;: &#34;&#34;, &#34;type&#34;: &#34;Generic&#34;, &#34;options&#34;: []}, &#34;transcripts&#34;: {&#34;explicitly_set&#34;: false, &#34;default_value&#34;: {}, &#34;field_name&#34;: &#34;transcripts&#34;, &#34;display_name&#34;: &#34;Idiomas de transcripci\\\\u00f3n&#34;, &#34;help&#34;: &#34;A\\\\u00f1ada transcripciones en diferentes idiomas. Haga clic a continuaci\\\\u00f3n para especificar un idioma y subir un archivo .srt de transcripci\\\\u00f3n para dicho idioma.&#34;, &#34;value&#34;: {}, &#34;type&#34;: &#34;VideoTranslations&#34;, &#34;options&#34;: [], &#34;custom&#34;: true, &#34;languages&#34;: [{&#34;label&#34;: &#34;Abkhazian&#34;, &#34;code&#34;: &#34;ab&#34;}], &#34;urlRoot&#34;: &#34;/xblock/block-v1:GalileoX+XS_Mate001+3T2022+type@video+block@20bc09f5522d430f8e43c2bc377b348c/handler/studio_transcript/translation&#34;}, &#34;youtube_id_0_75&#34;: {';\n    const testBadStudioViewData = 'tHiSiSaBAdDaTa';\n    it('returns an array of languages given a JSON string', () => {\n      expect(thunkActions.parseTranscripts({\n        transcriptsData: testStudioViewDataWithTranscripts,\n      })).toEqual(['aa', 'ab', 'ba', 'en']);\n    });\n    it('returns an empty array when there are no transcripts', () => {\n      expect(thunkActions.parseTranscripts({\n        transcriptsData: testStudioViewData,\n      })).toEqual([]);\n    });\n    it('returns an empty array given an unparsable JSON string', () => {\n      expect(thunkActions.parseTranscripts({\n        transcriptsData: testBadStudioViewData,\n      })).toEqual([]);\n    });\n  });\n  describe('parseLicense', () => {\n    const emptyLicenseData = null;\n    const noLicense = 'sOMeHTml data-metadata &#34;license&#34; &#34;value&#34;= null, &#34;type&#34;';\n    it('returns expected values for a license with no course license', () => {\n      expect(thunkActions.parseLicense({\n        licenseData: emptyLicenseData,\n        level: 'sOMElevEL',\n      })).toEqual([\n        null,\n        {},\n      ]);\n    });\n    it('returns expected values for a license with no block license', () => {\n      expect(thunkActions.parseLicense({\n        licenseData: noLicense,\n        level: 'block',\n      })).toEqual([\n        null,\n        {},\n      ]);\n    });\n    it('returns expected values for a license with all rights reserved', () => {\n      const license = 'sOMeHTml data-metadata &#34;license&#34; &#34;value&#34;: &#34;all-rights-reserved&#34;, &#34;type&#34;';\n      expect(thunkActions.parseLicense({\n        licenseData: license,\n        level: 'block',\n      })).toEqual([\n        'all-rights-reserved',\n        {},\n      ]);\n    });\n    it('returns expected type and options for creative commons', () => {\n      const license = 'sOMeHTml data-metadata &#34;license&#34; &#34;value&#34;: &#34;creative-commons: ver=4.0 BY NC ND&#34;, &#34;type&#34;';\n      expect(thunkActions.parseLicense({\n        licenseData: license,\n        level: 'block',\n      })).toEqual([\n        'creative-commons',\n        {\n          by: true,\n          nc: true,\n          nd: true,\n        },\n        '4.0',\n      ]);\n    });\n  });\n  describe('parseVideoShareSetting', () => {\n    describe('has no course setting or block setting for video sharing', () => {\n      it('should return an object with level equal to block and value equal to null', () => {\n        const videoSharingSetting = thunkActions.parseVideoSharingSetting({\n          courseSetting: null,\n          blockSetting: null,\n        });\n        expect(videoSharingSetting).toEqual({ level: 'block', value: null });\n      });\n    });\n    describe('has no course setting and block setting defined for video sharing', () => {\n      it('should return an object with level equal to block and value equal to true', () => {\n        const videoSharingSetting = thunkActions.parseVideoSharingSetting({\n          courseSetting: null,\n          blockSetting: true,\n        });\n        expect(videoSharingSetting).toEqual({ level: 'block', value: true });\n      });\n    });\n    describe('has course setting defined for video sharing', () => {\n      describe('course setting equals all-on', () => {\n        it('should return an object with level equal to course and value equal to true', () => {\n          const videoSharingSetting = thunkActions.parseVideoSharingSetting({\n            courseSetting: 'all-on',\n            blockSetting: true,\n          });\n          expect(videoSharingSetting).toEqual({ level: 'course', value: true });\n        });\n      });\n      describe('course setting equals all-off', () => {\n        it('should return an object with level equal to course and value equal to false', () => {\n          const videoSharingSetting = thunkActions.parseVideoSharingSetting({\n            courseSetting: 'all-off',\n            blockSetting: true,\n          });\n          expect(videoSharingSetting).toEqual({ level: 'course', value: false });\n        });\n      });\n      describe('course setting equals per-video', () => {\n        it('should return an object with level equal to block and value equal to block setting', () => {\n          const videoSharingSetting = thunkActions.parseVideoSharingSetting({\n            courseSetting: 'per-video',\n            blockSetting: false,\n          });\n          expect(videoSharingSetting).toEqual({ level: 'block', value: false });\n        });\n      });\n    });\n  });\n  describe('uploadHandout', () => {\n    beforeEach(() => {\n      thunkActions.uploadHandout({ file: mockFilename })(dispatch);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadAsset action', () => {\n      expect(dispatchedAction.uploadAsset).not.toBe(undefined);\n    });\n    test('passes file as image prop', () => {\n      expect(dispatchedAction.uploadAsset.asset).toEqual(mockFilename);\n    });\n    test('onSuccess: calls setSelection with camelized response.data.asset', () => {\n      const handout = mockFilename;\n      dispatchedAction.uploadAsset.onSuccess({ data: { asset: { url: mockFilename } } });\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({ handout }));\n    });\n  });\n  describe('uploadThumbnail', () => {\n    beforeEach(() => {\n      thunkActions.uploadThumbnail({ thumbnail: mockThumbnail })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadThumbnail action', () => {\n      expect(dispatchedAction.uploadThumbnail).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.uploadThumbnail.onSuccess(mockThumbnailResponse);\n      expect(dispatch).toHaveBeenCalledWith(\n        actions.video.updateField({\n          thumbnail: thumbnailUrl,\n        }),\n      );\n    });\n  });\n  describe('uploadThumbnail - emptyCanvas', () => {\n    beforeEach(() => {\n      thunkActions.uploadThumbnail({ thumbnail: mockThumbnail, emptyCanvas: true })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadThumbnail action', () => {\n      expect(dispatchedAction.uploadThumbnail).not.toEqual(undefined);\n    });\n  });\n  describe('importTranscript', () => {\n    beforeEach(() => {\n      thunkActions.importTranscript()(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadTranscript action', () => {\n      expect(dispatchedAction.importTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.importTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField(testUpload));\n    });\n  });\n  describe('deleteTranscript', () => {\n    beforeEach(() => {\n      thunkActions.deleteTranscript({ language: 'la' })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches deleteTranscript action', () => {\n      expect(dispatchedAction.deleteTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.deleteTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({ transcripts: [] }));\n    });\n  });\n  describe('uploadTranscript', () => {\n    beforeEach(() => {\n      thunkActions.uploadTranscript({\n        language: mockLanguage,\n        filename: mockFilename,\n        file: mockFile,\n      })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadTranscript action', () => {\n      expect(dispatchedAction.uploadTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.uploadTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField(testUpload));\n    });\n  });\n  describe('updateTranscriptLanguage', () => {\n    beforeEach(() => {\n      thunkActions.updateTranscriptLanguage({\n        newLanguageCode: mockLanguage,\n        languageBeforeChange: `${mockLanguage}i`,\n      })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadTranscript action', () => {\n      expect(dispatchedAction.getTranscriptFile).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.getTranscriptFile.onSuccess({ data: 'sOme StRinG Data' });\n      expect(dispatch).toHaveBeenCalled();\n    });\n  });\n  describe('replaceTranscript', () => {\n    const spies = {};\n    beforeEach(() => {\n      spies.uploadTranscript = jest.spyOn(thunkActions, 'uploadTranscript')\n        .mockReturnValue(testReplaceUpload).mockName('uploadTranscript');\n      thunkActions.replaceTranscript({\n        newFile: mockFile,\n        newFilename: mockFilename,\n        language: mockLanguage,\n      })(dispatch, getState, spies.uploadTranscript);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches deleteTranscript action', () => {\n      expect(dispatchedAction.deleteTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField and replaceTranscript success', () => {\n      dispatch.mockClear();\n      dispatchedAction.deleteTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalled();\n    });\n  });\n});\n\ndescribe('uploadVideo', () => {\n  let dispatch;\n  let setLoadSpinner;\n  let postUploadRedirect;\n  let dispatchedAction;\n  const supportedFiles = [\n    new File(['content1'], 'file1.mp4', { type: 'video/mp4' }),\n    new File(['content2'], 'file2.mov', { type: 'video/quicktime' }),\n  ];\n\n  beforeEach(() => {\n    dispatch = jest.fn((action) => ({ dispatch: action }));\n    setLoadSpinner = jest.fn();\n    postUploadRedirect = jest.fn();\n    jest.resetAllMocks();\n    jest.restoreAllMocks();\n  });\n\n  it('dispatch uploadVideo action with right data', async () => {\n    const data = {\n      files: [\n        { file_name: 'file1.mp4', content_type: 'video/mp4' },\n        { file_name: 'file2.mov', content_type: 'video/quicktime' },\n      ],\n    };\n\n    thunkActions.uploadVideo({ supportedFiles, setLoadSpinner, postUploadRedirect })(dispatch);\n    [[dispatchedAction]] = dispatch.mock.calls;\n    expect(dispatchedAction.uploadVideo).not.toEqual(undefined);\n    expect(setLoadSpinner).toHaveBeenCalled();\n    expect(dispatchedAction.uploadVideo.data).toEqual(data);\n  });\n\n  it('should call fetch with correct arguments for each file', async () => {\n    const mockResponseData = { success: true };\n    const mockFetchResponse = Promise.resolve({ data: mockResponseData });\n    global.fetch = jest.fn().mockImplementation(() => mockFetchResponse);\n    const response = {\n      files: [\n        { file_name: 'file1.mp4', upload_url: 'http://example.com/put_video1' },\n        { file_name: 'file2.mov', upload_url: 'http://example.com/put_video2' },\n      ],\n    };\n    const mockRequestResponse = { data: response };\n    thunkActions.uploadVideo({ supportedFiles, setLoadSpinner, postUploadRedirect })(dispatch);\n    [[dispatchedAction]] = dispatch.mock.calls;\n\n    dispatchedAction.uploadVideo.onSuccess(mockRequestResponse);\n\n    expect(fetch).toHaveBeenCalledTimes(2);\n    response.files.forEach(({ upload_url: uploadUrl }, index) => {\n      expect(fetch.mock.calls[index][0]).toEqual(uploadUrl);\n    });\n    supportedFiles.forEach((file, index) => {\n      expect(fetch.mock.calls[index][1].body.get('uploaded-file')).toBe(file);\n    });\n  });\n\n  it('should log an error if file object is not found in supportedFiles array', () => {\n    const mockResponseData = { success: true };\n    const mockFetchResponse = Promise.resolve({ data: mockResponseData });\n    global.fetch = jest.fn().mockImplementation(() => mockFetchResponse);\n    const response = {\n      files: [\n        { file_name: 'file2.gif', upload_url: 'http://example.com/put_video2' },\n      ],\n    };\n    const mockRequestResponse = { data: response };\n    const spyConsoleError = jest.spyOn(console, 'error');\n\n    thunkActions.uploadVideo({ supportedFiles: [supportedFiles[0]], setLoadSpinner, postUploadRedirect })(dispatch);\n    dispatchedAction.uploadVideo.onSuccess(mockRequestResponse);\n    expect(spyConsoleError).toHaveBeenCalledWith('Could not find file object with name \"file2.gif\" in supportedFiles array.');\n  });\n});\n"],"mappings":"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"}